import {
  HEX_HEIGHT,
  HEX_WIDTH,
  TRIANGLE_ALTITUDE,
  TRIANGLE_TO_SIDE_RATIO,
} from "../constants/imageProperties";
import catanBoardFactory from "../factories/boardFactory";
import { CatanBoard, CatanBoardTemplate } from "../types/boards";

describe("boardFactory", () => {
  it("should generate the correct Catan board from a template", () => {
    const template: CatanBoardTemplate = {
      board: [
        [
          { type: "empty" },
          { type: "empty" },
          { type: "empty" },
          { type: "sea", fixed: true, port: { type: "3:1", orientation: 240 } },
          { type: "sea", fixed: true },
          {
            type: "sea",
            fixed: true,
            port: { type: "grain", orientation: 300 },
          },
          { type: "sea", fixed: true },
        ],
        [
          { type: "empty" },
          { type: "empty" },
          { type: "sea", fixed: true },
          { type: "mountains", number: 10 },
          { type: "pasture", number: 2 },
          { type: "forest", number: 9 },
          { type: "sea", fixed: true, port: { type: "ore", orientation: 300 } },
        ],
        [
          { type: "empty" },
          {
            type: "sea",
            fixed: true,
            port: { type: "timber", orientation: 180 },
          },
          { type: "fields", number: 12 },
          { type: "hills", number: 6 },
          { type: "pasture", number: 4 },
          { type: "hills", number: 10 },
          { type: "sea", fixed: true },
        ],
        [
          { type: "sea", fixed: true },
          { type: "fields", number: 9 },
          { type: "forest", number: 11 },
          { type: "desert" },
          { type: "forest", number: 3 },
          { type: "mountains", number: 8 },
          { type: "sea", fixed: true, port: { type: "3:1", orientation: 0 } },
        ],
        [
          { type: "empty" },
          {
            type: "sea",
            fixed: true,
            port: { type: "brick", orientation: 180 },
          },
          { type: "forest", number: 8 },
          { type: "mountains", number: 3 },
          { type: "fields", number: 4 },
          { type: "pasture", number: 5 },
          { type: "sea", fixed: true },
        ],
        [
          { type: "empty" },
          { type: "empty" },
          { type: "sea", fixed: true },
          { type: "hills", number: 5 },
          { type: "fields", number: 6 },
          { type: "pasture", number: 11, maxPipsOnChit: 3 },
          { type: "sea", fixed: true, port: { type: "wool", orientation: 60 } },
        ],
        [
          { type: "empty" },
          { type: "empty" },
          { type: "empty" },
          { type: "sea", fixed: true, port: { type: "3:1", orientation: 120 } },
          { type: "sea", fixed: true },
          { type: "sea", fixed: true, port: { type: "3:1", orientation: 60 } },
          { type: "sea", fixed: true },
        ],
      ],
    };

    const expected: CatanBoard = {
      recommendedLayout: [
        { type: "sea", fixed: true, port: { type: "3:1", orientation: 240 } },
        { type: "sea", fixed: true },
        { type: "sea", fixed: true, port: { type: "grain", orientation: 300 } },
        { type: "sea", fixed: true },
        { type: "sea", fixed: true },
        { type: "mountains", number: 10 },
        { type: "pasture", number: 2 },
        { type: "forest", number: 9 },
        { type: "sea", fixed: true, port: { type: "ore", orientation: 300 } },
        {
          type: "sea",
          fixed: true,
          port: { type: "timber", orientation: 180 },
        },
        { type: "fields", number: 12 },
        { type: "hills", number: 6 },
        { type: "pasture", number: 4 },
        { type: "hills", number: 10 },
        { type: "sea", fixed: true },
        { type: "sea", fixed: true },
        { type: "fields", number: 9 },
        { type: "forest", number: 11 },
        { type: "desert" },
        { type: "forest", number: 3 },
        { type: "mountains", number: 8 },
        { type: "sea", fixed: true, port: { type: "3:1", orientation: 0 } },
        { type: "sea", fixed: true, port: { type: "brick", orientation: 180 } },
        { type: "forest", number: 8 },
        { type: "mountains", number: 3 },
        { type: "fields", number: 4 },
        { type: "pasture", number: 5 },
        { type: "sea", fixed: true },
        { type: "sea", fixed: true },
        { type: "hills", number: 5 },
        { type: "fields", number: 6 },
        { type: "pasture", number: 11 },
        { type: "sea", fixed: true, port: { type: "wool", orientation: 60 } },
        { type: "sea", fixed: true, port: { type: "3:1", orientation: 120 } },
        { type: "sea", fixed: true },
        { type: "sea", fixed: true, port: { type: "3:1", orientation: 60 } },
        { type: "sea", fixed: true },
      ],
      neighbors: [
        { e: 1, se: 5, sw: 4 },
        { e: 2, se: 6, sw: 5, w: 0 },
        { e: 3, se: 7, sw: 6, w: 1 },
        { se: 8, sw: 7, w: 2 },
        { ne: 0, e: 5, se: 10, sw: 9 },
        { nw: 0, ne: 1, e: 6, se: 11, sw: 10, w: 4 },
        { nw: 1, ne: 2, e: 7, se: 12, sw: 11, w: 5 },
        { nw: 2, ne: 3, e: 8, se: 13, sw: 12, w: 6 },
        { nw: 3, se: 14, sw: 13, w: 7 },
        { ne: 4, e: 10, se: 16, sw: 15 },
        { nw: 4, ne: 5, e: 11, se: 17, sw: 16, w: 9 },
        { nw: 5, ne: 6, e: 12, se: 18, sw: 17, w: 10 },
        { nw: 6, ne: 7, e: 13, se: 19, sw: 18, w: 11 },
        { nw: 7, ne: 8, e: 14, se: 20, sw: 19, w: 12 },
        { nw: 8, se: 21, sw: 20, w: 13 },
        { ne: 9, e: 16, se: 22 },
        { nw: 9, ne: 10, e: 17, se: 23, sw: 22, w: 15 },
        { nw: 10, ne: 11, e: 18, se: 24, sw: 23, w: 16 },
        { nw: 11, ne: 12, e: 19, se: 25, sw: 24, w: 17 },
        { nw: 12, ne: 13, e: 20, se: 26, sw: 25, w: 18 },
        { nw: 13, ne: 14, e: 21, se: 27, sw: 26, w: 19 },
        { nw: 14, sw: 27, w: 20 },
        { nw: 15, ne: 16, e: 23, se: 28 },
        { nw: 16, ne: 17, e: 24, se: 29, sw: 28, w: 22 },
        { nw: 17, ne: 18, e: 25, se: 30, sw: 29, w: 23 },
        { nw: 18, ne: 19, e: 26, se: 31, sw: 30, w: 24 },
        { nw: 19, ne: 20, e: 27, se: 32, sw: 31, w: 25 },
        { nw: 20, ne: 21, sw: 32, w: 26 },
        { nw: 22, ne: 23, e: 29, se: 33 },
        { nw: 23, ne: 24, e: 30, se: 34, sw: 33, w: 28 },
        { nw: 24, ne: 25, e: 31, se: 35, sw: 34, w: 29 },
        { nw: 25, ne: 26, e: 32, se: 36, sw: 35, w: 30 },
        { nw: 26, ne: 27, sw: 36, w: 31 },
        { nw: 28, ne: 29, e: 34 },
        { nw: 29, ne: 30, e: 35, w: 33 },
        { nw: 30, ne: 31, e: 36, w: 34 },
        { nw: 31, ne: 32, w: 35 },
      ],
      cssGridTemplateColumns: "repeat(14, 1fr)",
      cssGridTemplateRows: `${TRIANGLE_TO_SIDE_RATIO}fr 1fr `
        .repeat(7)
        .concat(`${TRIANGLE_TO_SIDE_RATIO}fr`),
      cssGridAreas: [
        "1 / 4 / 4 / 6",
        "1 / 6 / 4 / 8",
        "1 / 8 / 4 / 10",
        "1 / 10 / 4 / 12",
        "3 / 3 / 6 / 5",
        "3 / 5 / 6 / 7",
        "3 / 7 / 6 / 9",
        "3 / 9 / 6 / 11",
        "3 / 11 / 6 / 13",
        "5 / 2 / 8 / 4",
        "5 / 4 / 8 / 6",
        "5 / 6 / 8 / 8",
        "5 / 8 / 8 / 10",
        "5 / 10 / 8 / 12",
        "5 / 12 / 8 / 14",
        "7 / 1 / 10 / 3",
        "7 / 3 / 10 / 5",
        "7 / 5 / 10 / 7",
        "7 / 7 / 10 / 9",
        "7 / 9 / 10 / 11",
        "7 / 11 / 10 / 13",
        "7 / 13 / 10 / 15",
        "9 / 2 / 12 / 4",
        "9 / 4 / 12 / 6",
        "9 / 6 / 12 / 8",
        "9 / 8 / 12 / 10",
        "9 / 10 / 12 / 12",
        "9 / 12 / 12 / 14",
        "11 / 3 / 14 / 5",
        "11 / 5 / 14 / 7",
        "11 / 7 / 14 / 9",
        "11 / 9 / 14 / 11",
        "11 / 11 / 14 / 13",
        "13 / 4 / 16 / 6",
        "13 / 6 / 16 / 8",
        "13 / 8 / 16 / 10",
        "13 / 10 / 16 / 12",
      ],
      boardHeightPercentage: `${
        ((TRIANGLE_ALTITUDE + (HEX_HEIGHT - TRIANGLE_ALTITUDE) * 7) /
          (HEX_WIDTH * 7)) *
        100
      }%`,
      boardWidthPercentage: undefined,
      horizontal: undefined,
      maxPipsOnChits: [
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5,
      ],
    };

    const generated = catanBoardFactory(template);
    expect(generated).toEqual(expected);
  });
});
